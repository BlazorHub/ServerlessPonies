@page "/game/{PlayerName}"
@using System.Text.Json
@using Amolenk.ServerlessPonies.ClientApplication.Handlers
@using Amolenk.ServerlessPonies.ClientApplication.Phaser
@using Amolenk.ServerlessPonies.ClientApplication.Scenes
@using Amolenk.ServerlessPonies.Messages;
@using Microsoft.AspNetCore.Http.Connections
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@inject IPhaserInterop Phaser;
@inject IServiceProvider ServiceProvider;

<div id="phaser-container"></div>

@code {
    private HubConnection _hubConnection;

    PhaserGame game;

    [Parameter]
    public string PlayerName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl($"{Configuration.GetValue<string>("FunctionsBaseUrl")}api/signalr/{PlayerName}", options =>
            {
                // HACK Current Blazor SignalR implementation does not support access tokens
                // with web sockets.
                // See: https://github.com/dotnet/aspnetcore/issues/18697 
                options.Transports = HttpTransportType.LongPolling;
            })
            .Build();
        
        _hubConnection.On<string, JsonElement>("HandleMessage", HandleMessage);

        await _hubConnection.StartAsync();

        var animalEventHandler = new AnimalEventHandler();
        var playerEventHandler = new PlayerEventHandler();

        game = new PhaserGameBuilder(Phaser, ServiceProvider)
            .WithPlayerName(PlayerName)
            .WithScene<BootScene>()
            .WithScene<RanchScene>()
            .WithScene<AnimalCareScene>()
            .WithScene<AnimalManagementScene>()
            .WithScene<CreditsScene>()
            .WithEventHandler<GameStartedEvent>(new GameStartedEventHandler())
            .WithEventHandler<AnimalMoodChangedEvent>(animalEventHandler)
            .WithEventHandler<AnimalMovedEvent>(animalEventHandler)
            .WithEventHandler<AnimalPurchasedEvent>(animalEventHandler)
            .WithEventHandler<AnimalPurchaseFailedEvent>(animalEventHandler)
            .WithEventHandler<CreditsChangedEvent>(playerEventHandler)
            .Build();

        game.Start("phaser-container", "Serverless Ponies BETA 🐴");
    }

    void HandleMessage(string eventName, JsonElement eventPayload)
    {
        Console.WriteLine($"Received '{eventName}' event: {eventPayload}");

        var eventTypeName = $"Amolenk.ServerlessPonies.Messages.{eventName},Messages";
        var eventType = Type.GetType(eventTypeName);

        var @event = JsonSerializer.Deserialize(eventPayload.ToString(), eventType);

        game.HandleEvent(@event);
    }
}